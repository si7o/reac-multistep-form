{"version":3,"sources":["components/home-menu/HomeMenu.jsx","pages/Home.jsx","contexts/supplier-form/types.js","contexts/supplier-form/initialContextStore.js","contexts/supplier-form/supplierFormReducer.js","contexts/supplier-form/SupplierFormContext.jsx","components/commons/forms/CustomInputText.jsx","components/supplier-form/SupplierInfo.jsx","components/supplier-form/SupplierCompany.jsx","components/supplier-form/Confirmation.jsx","components/supplier-form/index.jsx","components/supplier-form/SupplierFormSidebar.jsx","components/commons/GoBackButton.jsx","components/commons/SideBar.jsx","pages/AddSupplier.jsx","components/search-bar/SearchBar.jsx","components/header/Header.jsx","themes/CustomTheme.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","homeMenu","width","textAlign","button","height","border","palette","primary","main","color","borderRadius","marginRight","textShadow","boxShadow","icon","MainMenu","classes","Box","className","ButtonBase","component","Link","to","title","variant","Home","Container","TYPES","SAVE_STEP_1","SAVE_STEP_2","PREVIOUS_STEP","RESET","SUBMIT","SUBMITTED","initialContextStore","step","formData","name","country","postalCode","city","city2","branch","streetAddress","billingAddress","companyName","contactName","contactPhone","isSubmitting","supplierFormReducer","store","action","type","values","Context","React","createContext","ContextProvider","children","useReducer","dispatch","Provider","value","label","black","input","paddingTop","CustomInputText","required","useField","field","meta","comuptedLabel","FormLabel","htmlFor","TextField","fullWidth","onBlur","onChange","helperText","touched","error","SupplierInfo","useContext","SupplierFormContext","validationSchema","Yup","initialValues","onSubmit","Grid","container","spacing","justify","item","xs","Button","disabled","SupplierCompany","handlePreviousClick","setTimeout","startIcon","CircularProgress","size","onClick","Confirmation","Alert","severity","Paper","JSON","stringify","SupplierForm","SupplierFormSidebar","List","ListSubheader","ListItem","alignItems","textTransform","fontWeight","display","verticalAlign","GoBackButton","RouterLink","sidebar","padding","minWidth","SideBar","AddSupplier","Search","useTheme","css","backgroundColor","grey","sm","id","placeholder","InputProps","startAdornment","InputAdornment","position","Header","AppBar","Typography","customTheme","createMuiTheme","dark","light","secondary","success","info","warning","brand","props","MuiButton","MuiTextField","overrides","MuiAppBar","colorPrimary","App","ThemeProvider","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.f31c67ac.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Box, ButtonBase } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport HomeIcon from '@material-ui/icons/HomeOutlined';\r\nimport PostAddIcon from '@material-ui/icons/PostAddOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    homeMenu: {\r\n        width: '100%',\r\n        textAlign: 'center',\r\n    },\r\n    button: {        \r\n        height: \"200px\",\r\n        width: \"200px\",\r\n        border: `5px solid ${theme.palette.primary.main}`,\r\n        color: theme.palette.primary.main,\r\n        borderRadius: \"10px\",\r\n        marginRight: \"1rem\",\r\n        '&:hover': {\r\n            textShadow: `0 0 3px ${theme.palette.primary.main}`,\r\n            boxShadow: `0 0 3px ${theme.palette.primary.main}`,\r\n        }\r\n    },\r\n    icon: {\r\n        height: \"200px\",\r\n        width: \"200px\",\r\n\r\n    }\r\n}))\r\n\r\nexport default function MainMenu() {\r\n    const classes = useStyles()\r\n    \r\n    return (        \r\n        <Box className={classes.homeMenu}>\r\n            <ButtonBase component={Link} to=\"/\" title=\"Home\" className={classes.button} variant=\"outlined\" color=\"primary\">                \r\n                <HomeIcon className={classes.icon}/>\r\n            </ButtonBase>\r\n            <ButtonBase component={Link} to=\"/supplier/add\" title=\"Add Supplier\" className={classes.button} variant=\"outlined\" color=\"primary\">\r\n                <PostAddIcon className={classes.icon}/>\r\n            </ButtonBase>\r\n        </Box>\r\n    )    \r\n}\r\n","import React from 'react'\r\nimport HomeMenu from 'components/home-menu/HomeMenu'\r\nimport { Container } from '@material-ui/core'\r\n\r\nexport default function Home() {\r\n    return (  \r\n        <Container>\r\n            <h2>Home</h2>      \r\n            <HomeMenu/>\r\n        </Container>\r\n    )\r\n}\r\n","const TYPES = {\r\n    SAVE_STEP_1: 'SAVE_STEP_1',\r\n    SAVE_STEP_2: 'SAVE_STEP_2',\r\n    PREVIOUS_STEP: 'PREVIOUS_STEP',    \r\n    RESET: 'RESET',\r\n    SUBMIT: 'SUBMIT',\r\n    SUBMITTED: 'SUBMITTED',\r\n}\r\n\r\nexport default TYPES","const initialContextStore = {\r\n        step: 1,\r\n        formData: {            \r\n            name:'',\r\n            country: '',\r\n            postalCode: '',\r\n            city: '',\r\n            city2: '',\r\n            branch: '',\r\n            streetAddress: '',\r\n            billingAddress: '',\r\n            companyName:'',\r\n            contactName: '',\r\n            contactPhone: '',\r\n        },\r\n        isSubmitting: false,\r\n    }\r\n\r\nexport default initialContextStore","import TYPES from \"./types\"\r\nimport initialContextStore from \"./initialContextStore\"\r\n\r\nexport const supplierFormReducer = (store, action) => {\r\n    switch (action.type) {\r\n        case TYPES.SAVE_STEP_1:\r\n            return {\r\n                ...store,\r\n                step: 2,\r\n                formData: action.values\r\n            }\r\n\r\n        case TYPES.SAVE_STEP_2:\r\n            return {\r\n                ...store,\r\n                formData: action.values\r\n            }\r\n        \r\n        case TYPES.PREVIOUS_STEP: {\r\n            return {\r\n                ...store,\r\n                step: store.step-1,\r\n            }\r\n        }\r\n            \r\n        case TYPES.SUBMIT:\r\n            return {\r\n                ...store,\r\n                isSubmitting: true,\r\n            }\r\n\r\n        case TYPES.SUBMITTED: {\r\n            return {\r\n                ...store,\r\n                step: 3,\r\n                isSubmitting: action.isSubmitting,\r\n            }\r\n        }\r\n\r\n        case TYPES.RESET: {\r\n            return initialContextStore   \r\n        }\r\n\r\n        default:\r\n            return store\r\n    }\r\n}","import React, { useReducer } from 'react'\r\nimport { supplierFormReducer } from './supplierFormReducer'\r\nimport initialContextStore from './initialContextStore'\r\n\r\nconst Context = React.createContext() \r\n\r\nconst ContextProvider = ({children}) => {    \r\n\r\n    const [store, dispatch]= useReducer(supplierFormReducer, initialContextStore)   \r\n\r\n    return (\r\n        <Context.Provider value={{store, dispatch}}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport {Context as SupplierFormContext}\r\nexport {ContextProvider as SupplierFormContextProvider}\r\n\r\n","import React from 'react'\r\nimport { useField } from 'formik'\r\nimport { FormLabel, TextField, makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    label: {\r\n        color: theme.palette.black.main,\r\n    },\r\n    input: {\r\n        paddingTop: '10px',\r\n    },\r\n}))\r\n\r\nexport default function CustomInputText({name, label, required}) {\r\n    const [field, meta] = useField(name)\r\n    const classes = useStyles()\r\n\r\n    const comuptedLabel = label + (!!required && '*')\r\n\r\n    return (\r\n        <>\r\n            <FormLabel htmlFor={name} className={classes.label}>{comuptedLabel}</FormLabel>\r\n            <TextField\r\n                className={classes.input}\r\n                name={name}\r\n                fullWidth={true}\r\n                onBlur={field.onBlur}\r\n                onChange={field.onChange}\r\n                value={field.value}                \r\n                helperText={meta.touched && meta.error}\r\n                error={meta.error}\r\n                />\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Formik, Field, Form } from 'formik'\r\nimport { TextField } from 'formik-material-ui'\r\nimport * as Yup from 'yup'\r\n\r\nimport { SupplierFormContext } from 'contexts/supplier-form/SupplierFormContext'\r\nimport TYPES from 'contexts/supplier-form/types'\r\nimport { Grid, Button, Box } from '@material-ui/core'\r\nimport CustomInputText from 'components/commons/forms/CustomInputText'\r\n\r\nexport default function SupplierInfo() {\r\n    const {store, dispatch} = useContext(SupplierFormContext)\r\n\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string()\r\n            .required(),\r\n        country: Yup.string()\r\n            .required(),\r\n        postalCode: Yup.string()\r\n            .required(),\r\n        city: Yup.string()\r\n            .required(), \r\n    })\r\n\r\n    const handleSubmit = (values, {isSubmitting}) => {\r\n        dispatch({type: TYPES.SAVE_STEP_1, values})\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{...store.formData}}\r\n            onSubmit={handleSubmit}            \r\n            validationSchema={validationSchema}\r\n        >\r\n            {({isSubmitting}) => (\r\n            <Form>\r\n                <Grid container spacing={3} justify=\"space-between\">\r\n                    <Grid item xs={12}>\r\n                        <CustomInputText name=\"name\" label=\"Supplier Name\" required/>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Field component={TextField} name=\"country\" label=\"Country\" fullWidth={true}/>\r\n                    </Grid>                    \r\n                    <Grid item xs={6}>\r\n                        <Field component={TextField} name=\"city\" label=\"City\" fullWidth={true}/>\r\n                    </Grid>                    \r\n                    <Grid item xs={6}>\r\n                        <Field component={TextField} name=\"postalCode\" label=\"Postal Code\" fullWidth={true} />\r\n                    </Grid>                    \r\n                    <Grid item xs={6}>\r\n                        <Field component={TextField} name=\"city2\" label=\"City\" fullWidth={true} />\r\n                    </Grid>                    \r\n                    <Grid item xs={6}>\r\n                        <Field component={TextField} name=\"branch\" label=\"Branch\" fullWidth={true}/>\r\n                    </Grid>                    \r\n                    <Grid item xs={6}>\r\n                        <Field component={TextField} name=\"streetAddress\" label=\"Street Address\" fullWidth={true}/>\r\n                    </Grid>                    \r\n                    <Grid item xs={6}>\r\n                        <Field component={TextField} name=\"billingAddress\" label=\"Billing Address\" fullWidth={true}/>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <Box className=\"action-buttons\">\r\n                            <Button type=\"submit\" color=\"primary\" disabled={isSubmitting}>\r\n                                Next \r\n                            </Button>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>    \r\n            </Form>\r\n            )}\r\n        </Formik>             \r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Formik, Field, Form } from 'formik'\r\nimport { TextField } from 'formik-material-ui'\r\nimport * as Yup from 'yup'\r\n\r\nimport { SupplierFormContext } from 'contexts/supplier-form/SupplierFormContext'\r\nimport TYPES from 'contexts/supplier-form/types'\r\nimport { Grid, Button, Box, CircularProgress } from '@material-ui/core'\r\n\r\nexport default function SupplierCompany() {\r\n    const {store, dispatch} = useContext(SupplierFormContext)\r\n\r\n    const validationSchema = Yup.object({                    \r\n        companyName: Yup.string()\r\n            .required(),\r\n        contactName: Yup.string()\r\n            .required(),\r\n        contactPhone: Yup.string()\r\n            .required(),    \r\n    })\r\n\r\n    const handleSubmit = (values, {isSubmitting}) => {\r\n        dispatch({type: TYPES.SAVE_STEP_2, values})\r\n        dispatch({type: TYPES.SUBMIT})\r\n        \r\n        setTimeout(() => {\r\n            dispatch({type: TYPES.SUBMITTED})\r\n        }, 1000);\r\n    }\r\n\r\n    const handlePreviousClick = () => {\r\n        dispatch({type: TYPES.PREVIOUS_STEP})\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{...store.formData}}\r\n            onSubmit={handleSubmit}            \r\n            validationSchema={validationSchema}\r\n        >\r\n            {({isSubmitting}) => (\r\n            <Form>\r\n                <Grid container spacing={3} justify=\"space-between\">\r\n                    <Grid item xs={12}>\r\n                        <Field component={TextField} name=\"companyName\" label=\"Company Name\" fullWidth={true}/>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Field component={TextField} name=\"contactName\" label=\"Contact Name\" fullWidth={true}/>\r\n                    </Grid>                    \r\n                    <Grid item xs={6}>\r\n                        <Field component={TextField} name=\"contactPhone\" label=\"Contact Phone\" fullWidth={true}/>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Box className=\"action-buttons\">                            \r\n                            <Button \r\n                                type=\"submit\" \r\n                                color=\"primary\" \r\n                                disabled={isSubmitting || store.isSubmitting}\r\n                                startIcon={store.isSubmitting && <CircularProgress size={20}/>}\r\n                            >\r\n                                Submit \r\n                            </Button>\r\n                            <Button \r\n                                onClick={handlePreviousClick} \r\n                                disabled={isSubmitting || store.isSubmitting}\r\n                            >\r\n                                Previous\r\n                            </Button>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>    \r\n            </Form>\r\n            )}\r\n        </Formik>             \r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Grid, Button, Box, Paper } from '@material-ui/core'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { SupplierFormContext } from 'contexts/supplier-form/SupplierFormContext'\r\nimport TYPES from 'contexts/supplier-form/types'\r\n\r\nexport default function Confirmation() {\r\n    const {store, dispatch} = useContext(SupplierFormContext)\r\n\r\n    const resetForm = () => {\r\n        dispatch({type: TYPES.RESET})\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={3} justify=\"space-between\">\r\n            <Grid item xs={12}>\r\n                <Alert severity=\"success\">Form submitted</Alert>\r\n                <Paper>\r\n                    <pre>\r\n                        {JSON.stringify(store.formData, null, 2)}\r\n                    </pre>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Box className=\"action-buttons\">\r\n                    <Button onClick={resetForm}>\r\n                        Ok\r\n                    </Button>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\n\r\nimport './SupplierForm.scss'\r\nimport { SupplierFormContext } from 'contexts/supplier-form/SupplierFormContext';\r\nimport SupplierInfo from './SupplierInfo';\r\nimport SupplierCompany from './SupplierCompany';\r\nimport Confirmation from './Confirmation';\r\n\r\nexport default function SupplierForm() { \r\n    const {store} = useContext(SupplierFormContext)    \r\n    \r\n    return (\r\n        <>\r\n            {store.step === 1 && <SupplierInfo />}\r\n            {store.step === 2 && <SupplierCompany />}\r\n            {store.step === 3 && <Confirmation />}\r\n        </>\r\n    )       \r\n}\r\n","import React, { useContext } from 'react'\r\n\r\nimport './SupplierForm.scss'\r\nimport { SupplierFormContext } from 'contexts/supplier-form/SupplierFormContext';\r\nimport { List, ListSubheader, ListItem, Box } from '@material-ui/core';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n\r\nexport default function SupplierFormSidebar() { \r\n    const {store} = useContext(SupplierFormContext)\r\n\r\n    return (\r\n        <Box className=\"sidebar\">\r\n            <List>\r\n                <ListSubheader>Form steps</ListSubheader>\r\n                <ListItem disabled={store.step < 1} alignItems=\"center\">\r\n                    Supplier info {(store.step > 1) && <DoneIcon color=\"primary\"/>}\r\n                </ListItem>\r\n                <ListItem disabled={store.step < 2}>\r\n                    Company info {(store.step > 2) && <DoneIcon color=\"primary\"/>}\r\n                </ListItem>\r\n            </List>\r\n        </Box>\r\n    )       \r\n}\r\n","import React from 'react'\r\nimport { Link } from '@material-ui/core'\r\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\r\n\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        textTransform: \"none\",\r\n        fontWeight: \"bold\",\r\n        color: theme.palette.black.main,\r\n        display: \"flex\",\r\n        verticalAlign: \"middle\",\r\n    },\r\n}))\r\n\r\nexport default function GoBackButton() {\r\n    const classes = useStyles()\r\n    return (\r\n        <Link component={RouterLink}  to=\"/\" className={classes.button}>\r\n            <KeyboardBackspaceIcon />\r\n            Go Back\r\n        </Link>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Box } from '@material-ui/core'\r\n\r\nimport GoBackButton from './GoBackButton'\r\nimport { makeStyles } from '@material-ui/styles'\r\n\r\nconst useStyles = makeStyles({\r\n    sidebar: {\r\n        padding: '1rem',\r\n        width: '200px',\r\n        minWidth: '200px',\r\n    }\r\n})\r\n\r\nexport default function SideBar({children}) {\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Box className={classes.sidebar}>\r\n            <GoBackButton />\r\n            {children}\r\n        </Box>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport SupplierForm from 'components/supplier-form'\r\nimport { Box } from '@material-ui/core'\r\nimport { SupplierFormContextProvider } from 'contexts/supplier-form/SupplierFormContext'\r\nimport SupplierFormSidebar from 'components/supplier-form/SupplierFormSidebar'\r\nimport SideBar from 'components/commons/SideBar'\r\n\r\nexport default function AddSupplier() {\r\n    return (\r\n        <>\r\n            <SupplierFormContextProvider> \r\n                <Box className=\"sidebar\">\r\n                    <SideBar>\r\n                        <SupplierFormSidebar />\r\n                    </SideBar>\r\n                </Box>\r\n                <Box width=\"100%\">\r\n                    <h2>Supplier Creation Page</h2>                    \r\n                        <SupplierForm />\r\n                </Box>\r\n            </SupplierFormContextProvider>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TextField, Grid, Container, InputAdornment, useTheme, Box, Link } from '@material-ui/core'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\n\r\nimport './SearchBar.scss'\r\n\r\nexport default function Search() {\r\n    const theme = useTheme()\r\n    return (\r\n        <Box className=\"search-bar\" css={{backgroundColor: theme.palette.grey.main}}>\r\n            <Container>\r\n                <Grid container alignItems=\"center\">                    \r\n                    <Grid item xs={12} sm={10}>\r\n                        <TextField \r\n                            id=\"search-properties\" \r\n                            type=\"search\" \r\n                            fullWidth={true} \r\n                            variant=\"outlined\" \r\n                            placeholder=\"Search Properties\"\r\n                            size=\"small\"\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                        <SearchIcon />\r\n                                    </InputAdornment>\r\n                                )\r\n                            }}\r\n                        >\r\n                        </TextField>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={2}>\r\n                        <Link component=\"button\" color=\"inherit\">\r\n                            Advanced Search\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport SearchBar from 'components/search-bar/SearchBar';\r\nimport { AppBar, Typography} from '@material-ui/core';\r\n\r\nimport './Header.scss'\r\n\r\nexport default function Header() {    \r\n    return (\r\n        <>\r\n            <AppBar position=\"sticky\" className=\"header\">                \r\n                <Typography variant=\"h2\">\r\n                    LooGoo\r\n                </Typography>\r\n            </AppBar>\r\n            <SearchBar />\r\n        </>\r\n    )\r\n}\r\n","import { createMuiTheme } from \"@material-ui/core\"\r\n\r\nexport const customTheme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: \"#0394F3\",\r\n            dark: \"#0065B9\",\r\n            light: \"#A7DCFF\",\r\n        },\r\n        secondary: { \r\n            main: \"#46D9E2\"\r\n        },\r\n        success: {\r\n            main: \"#00B760\",\r\n            dark: \"#00833D\",\r\n            light: \"#B3EBCA\",\r\n        },\r\n        info: {\r\n            main: \"#00B6EE\",\r\n            dark: \"#0078B7\",\r\n            light: \"#B0E5F8\",\r\n        },\r\n        error: {\r\n            main: \"#F04F3F\",\r\n            dark: \"#B22C26\",\r\n            light: \"#FDCFD4\",\r\n        },        \r\n        warning: {\r\n            main: \"#FCB200\",\r\n            dark: \"#D66A18\",\r\n            light: \"#FEEBB3\",\r\n        },        \r\n        brand: {\r\n           main: \"#E53320\",\r\n        },\r\n        grey: {\r\n           main: \"#D1D3D1\",\r\n        },\r\n        black: {\r\n           main: \"#000000\",\r\n        },\r\n    },\r\n    props: {\r\n        MuiButton: {\r\n            variant: \"contained\",\r\n        },\r\n        MuiTextField: {\r\n            variant: \"outlined\",\r\n        }\r\n    },\r\n\r\n    overrides: {\r\n        MuiButton: {\r\n        },\r\n        MuiAppBar: {        \r\n            colorPrimary: {\r\n                backgroundColor: \"#E53320\",\r\n            },\r\n        },\r\n    }\r\n})\r\n","import React from 'react'\nimport { HashRouter, Switch, Route } from 'react-router-dom'\nimport './App.css'\nimport Home from './pages/Home'\nimport AddSupplier from './pages/AddSupplier'\nimport Header from './components/header/Header'\nimport NotFound from './pages/NotFound'\nimport { Container, ThemeProvider, Box } from '@material-ui/core'\n\nimport { customTheme } from './themes/CustomTheme'\n\n\nfunction App() {\n  return (\n    <ThemeProvider theme={customTheme}>\n      <HashRouter>\n        <Header />\n        <Container>    \n          <Box className=\"main-content\">              \n            <Switch>\n              <Route exact path=\"/\" component={Home}/>\n              <Route exact path=\"/supplier/add\"  component={AddSupplier}/>\n              {/*<Route component={NotFound} />*/}\n            </Switch>        \n          </Box>\n        </Container>\n      </HashRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}